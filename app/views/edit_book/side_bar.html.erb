
<style type="text/css">
  .toolbar  { position:fixed; top:0px; left:1px; padding:1px; font-family:Arial; background:#fffea1; border:1px solid #fc0;}
    a, a:link, a:visited {color: #ffffff;}
  </style>
<script type="text/javascript">
<!--
function handleClick(book_id, image_id, src, image_number){
  frameUrl = top.frames['content'].location.href;
  //console.log(frameUrl);
  hashOffset = frameUrl.indexOf("#");
  if(hashOffset) {
    frameUrl = frameUrl.substring(0, hashOffset)
  }
  //console.log("location = " + frameUrl + "#" + image_id);
  parent.content.location = frameUrl + "#" + image_id;

    //get the frame element
    var frameRef = document.getElementById("content");
    //focus the frame element
    var contentFrame = $("frame[name='content']", top.document);
    $(contentFrame).focus();
    var image_number_label = $("#image_number_"+image_number, window.parent.frames["content"].document);
    $(image_number_label).focus();
}

function showGuide() {
    window.open('/help/DescriptionGuidance.html', '_guide',
            'height=400,width=700,status=false,menubar=0,location=0,toolbar=1,scrollbars=yes,left=100,top=100');
}

function handleSubmitResponse(responseText, responseStatus) {
  // no need to tell the user it worked
}

function handleImageCategory(form){
  jQuery.ajaxSetup({ 
    timeout: 5 * 1000,
    error: function(XMLHttpRequest, textStatus, errorThrown) {
                alert("ERROR: Unable to save change\n" + errorThrown) }
    });
  authenticity_token = form.authenticity_token.value
  id = form["dynamic_image[id]"].value
  image_category_id = form["dynamic_image[image_category_id]"].value
  data = {
    "authenticity_token" : authenticity_token,
    "id" : id,
    "dynamic_image[image_category_id]" : image_category_id
  }
  jQuery.post("/imageDesc/dynamic_images/" + id, data, function(data, status) {handleSubmitResponse(data, status)})
}

function handleImageEssentialChange(form){
  jQuery.ajaxSetup({ 
    timeout: 5 * 1000,
    error: function(XMLHttpRequest, textStatus, errorThrown) {
                alert("ERROR: Unable to save change\n" + errorThrown) }
    });
  authenticity_token = form.authenticity_token.value
  id = form["dynamic_image[id]"].value
  should_be_described = form["dynamic_image[should_be_described]"].value
  data = {
    "authenticity_token" : authenticity_token,
    "id" : id,
    "dynamic_image[should_be_described]" : should_be_described
  }
  jQuery.post("/imageDesc/dynamic_images/" + id, data, function(data, status) {handleSubmitResponse(data, status)})
}

function shouldShow(filterValue, essentialFlagValue, descriptionCount)
{
  isEssential = essentialFlagValue.indexOf("true") >= 0
  isNonEssential = essentialFlagValue.indexOf("false") >= 0
  isUnspecified = essentialFlagValue == ""
  hasDescriptions = descriptionCount >= 1

  showEssential = (filterValue == "essential")
  if(showEssential)
    return isEssential
    
  showNonEssential = (filterValue == "non-essential")
  if(showNonEssential)
    return isNonEssential

  showNeedsDescription = (filterValue == "missing")
  if(showNeedsDescription)
    return (isEssential && !hasDescriptions)
    
  showUnspecified = (filterValue == "unspecified")
  if(showUnspecified)
    return isUnspecified
    
  return true
}

function handleFragmentChange(element)
{
    book_fragment_id = $(element).val();
    
    top.frames['content'].location = "/edit_book/content?book_fragment_id=" + book_fragment_id + "#top";
    top.frames['side_bar'].location = "/edit_book/side_bar?book_id=<%=@book.id%>&book_fragment_id=" + book_fragment_id;
}
function handleImageNumber(element)
{
  
  book_image_id = $('#image_number').val();
  top.frames['content'].location = "/edit_book/content?book_id=<%=@book.id%>&book_image_id=" + book_image_id + "#" + book_image_id;
  top.frames['side_bar'].location = "/edit_book/side_bar?book_id=<%=@book.id%>&book_image_id=" + book_image_id;
}
function handleFilterChange()
{
    var desired = document.getElementById("filter").value ;
    window.location.href = "/edit_book/side_bar?book_id=<%=session[:book_id]%>" + "&filter=" + desired + "&book_fragment_id=<%= @fragment_id%>"
}
<%
  book = Book.find session[:book_id] rescue nil
%>
//-->
</script>
<div class="toolbar" style="width:300px;">
<label for="fragment">Show book part</label>
<%= select_tag(:fragment, options_for_select(book.book_fragments.map{|book| [" #{book.sequence_number}", book.id]}, (params[:book_fragment_id] || 0).to_i),{ :onchange => "handleFragmentChange(this)"}) if book%>
<br>
<label for="filter">Show</label>
<%= select_tag(:filter, options_for_select([[t(:filter_all), EditBookController::FILTER_ALL], [t(:filter_essential), EditBookController::FILTER_ESSENTIAL], [t(:filter_non_essential), EditBookController::FILTER_NON_ESSENTIAL], [t(:filter_description_needed), EditBookController::FILTER_DESCRIPTION_NEEDED], [t(:filter_unspecified), EditBookController::FILTER_UNSPECIFIED]], @filter),{ :onchange => "handleFilterChange()"})%>
<b><%= @images.size %> <%= t(:filter_result)%> <a href='#' title="Guidelines for describing images. Will open in popup window." onClick="showGuide()">
</a></b></br>
<label for="image_number">Go to Image #</label>
<%= text_field_tag :image_number %>
<%= submit_tag :go, :onclick => 'handleImageNumber(this);' %>
<br>
</div>

</br></br></br>

<%
  if book
    @images.each do | image |
      xml_id = image.xml_id
      raw_src = image.image_location
      src = "book/#{raw_src}"

          model =  image


%>
<div id="div_<%= src %>" style="padding-left: 5px;">
  <a id="<%= xml_id %>" href="#<%= xml_id %>">
  <img style="padding-top: 55px;"
    onclick="handleClick('<%= book.id %>', '<%= xml_id %>', '<%= raw_src %>', '<%= model.id %>')"
    alt="Image <%= model.id %>. Clicking will cause the frame to the right to scroll to this image within the book." src="<%= model.thumb_source(@host)%>">
  </img>
  </a>
  </br>Image Number: <%= model.id %>
<%=
    form_for model do | form |
%>
      <%= form.label("should_be_described_#{model.id}", "Should be described:") %>
      <%= form.select :should_be_described, [['Yes', true], ['No', false]],
        {:include_blank => 'Unspecified', :custom_label => 'Essential?'},
        {:id => "dynamic_image_should_be_described_#{model.id}", :onChange => "handleImageEssentialChange(this.form);" }  %>
       <%= form.hidden_field(:id) %>
      <%= form.hidden_field(:book_id) %>
      <%= form.hidden_field(:image_location) %>
      <%= form.label("image category", "Type:") %>
      <%= form.select :image_category_id, ImageCategory.all.map {|category| [category.name, category.id]},
        {:include_blank => 'Unspecified', :custom_label => 'Category?'},
        {:id => "dynamic_image_image_category_id_#{model.id}", :onChange => "handleImageCategory(this.form);" }  %>      
      
<!--    <%= form.submit %> -->
<%
    end
%>

<hr/>
</div>
<% 
    end
  end 
%>
